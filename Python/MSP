#MSP
#Written by Julia Bailey
#9/21/21

import time

word = input("Player 1, enter your word: ")     # asks player 1 to define 'word'
time.sleep(0.15)                                # waits very briefly before clearing the screen so player 1 has a chance to notice if they made a typo
print("\n" * 50)                                # clears screen by printing 50 blank lines

fb = len(word)*("_")                            # creates list of underscores the length of the word
numincor = 0                                    # number of incorrect guesses - also function as lives

mislett = []                                    # creates empty array to store the incorrect guesses 

guess = input("Player 2, enter your guess: ")   # asks player 2 to enter their initial guess


def msp(numincor):                              # function to print the hangman graphic
    print("---┐")                               # prints the top bar of the hangman for every guess
    if numincor == 0:                           # prints different graphic based on the number of incorrect guesses
        print("\n" * 4)
    if numincor == 1:
        print("   O ")
        print("\n" * 3)
    if numincor == 2:
        print("   O ")
        print("   |")
        print("\n" * 2)
    if numincor == 3:
        print("   O ")
        print("  \|")
        print("\n" * 2)
    if numincor == 4:
        print("   O ")
        print("  \|/")
        print("\n" * 2)
    if numincor == 5:
        print("   O ")
        print("  \|/")
        print("   | ")
        print("\n")
    if numincor == 6:
        print("   O ")
        print("  \|/")
        print("   | ")
        print("  /")
    if numincor == 7:
        print("   O ")
        print("  \|/")
        print("   | ")
        print("  / \ ")


while True:
    
    guesscor = 0                                    # guesscor functions as a boolean to check whether a guess is in a word - IMPORTANT to be inside while loop so it gets reset to 0 every guess
    for i in range(len(word)):                      # runs through loop for the length of the word                              
            if guess == word[i]:                    # checks if the guess is in specific location word
                fb = fb[:i] + guess + fb[i+1:]      # adds guess to array 'fb' - brackets skip over characters not at spot 'i' in word
                guesscor = 1                        # sets guesscor equal to 1, which prevents the guess from being added to incorrect guesses list
                
    if guesscor != 1:                               # checks if guess was not in word
        mislett.append(guess)                       # adds to missed letters list
        numincor = numincor + 1                     # increases number of incorrect letters
                
    msp(numincor)                                   # prints hangman graphic
    
    if numincor >= 7:                               # checks if player 2 has guessed 7 incorrect letters
        print("Your Man-Shaped Piñata has been completed")  # prints ending message
        print("What type of candy did you put in it?")
        print("The word was '" + word + "'")
        break                                       # stops game
    
    if fb == word:                                  # checks if array of correct guesses equals the word
        print("Congrats, you were unable to complete your Man-Shaped Piñata.")  # prints ending message
        print("Go tell everyone of your inferior piñata-making skills.")
        print("")
        print ("You had " + str(numincor) + " incorrect guesses.")
        break                                       # stops game
    
    print("Missed Letters: ")                       # prints the letters missed
    print(*mislett)
    print("")
    print(*fb)                                      # prints array of guesses and blanks - '*' prints each character of array separately, but on same line
    print("Guess a letter:")
    guess = input("")                               # asks player 2 for next guess
